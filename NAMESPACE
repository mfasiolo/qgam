useDynLib(qgam, .registration = TRUE, .fixes = ".C_")
exportPattern("^[[:alpha:]]+")

importFrom(plyr, "is.formula", "llply", "mlply")
importFrom(doParallel, "registerDoParallel")
importFrom(parallel, "makeCluster", "stopCluster", "detectCores", "clusterExport", "clusterEvalQ")

importFrom(stats, "pnorm", "coef", "qnorm", "printCoefmat", "predict", "qbinom", "make.link", 
                  "dlogis", "plogis", "complete.cases", "na.omit", "quantile", "runif", "cov", 
                  "optim", "anova", "optimize", "residuals", "sd", "gaussian", "update", "as.formula")
importFrom(grDevices, "rgb")

import(mgcv)
import(shiny)
import(graphics)

S3method("check", "qgam", "check.qgam")
S3method("check", "learn", "check.learn")
S3method("check", "learnFast", "check.learnFast")